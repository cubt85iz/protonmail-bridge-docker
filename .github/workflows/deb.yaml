name: pack from deb

on:
  push:
    branches:
      - master
      - dev
    paths:
      - .github/workflows/deb.yaml
      - deb/*
  pull_request:
    paths:
      - .github/workflows/deb.yaml
      - deb/*
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.event.repository.name }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  deb:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Generate image tags
        id: generate-image-tags
        shell: bash
        run: |
          VERSION="$(cat deb/VERSION)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          BUILD_TAGS=( "latest" "${VERSION}" )
          echo "alias_tags=${BUILD_TAGS[*]}" >> $GITHUB_OUTPUT

      - name: Define Image Metadata
        id: define-image-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.version=${{ env.VERSION }}
        
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./deb/Dockerfile
          context: ./deb
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.generate-image-tags.outputs.alias_tags }}
          labels: ${{ steps.define-image-metadata.outputs.labels }}
          oci: false

    #   - name: Scan image
    #     id: scan
    #     uses: anchore/scan-action@v2
    #     with:
    #       image: ${{ env.IMAGE_NAME }}:latest
    #       fail-build: true
    #       severity-cutoff: critical
    #       acs-report-enable: true
          
    #   - name: Upload Anchore scan SARIF report
    #     uses: github/codeql-action/upload-sarif@v1
    #     with:
    #       sarif_file: ${{ steps.scan.outputs.sarif }}
          
      - name: Push to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Sign container
      - uses: sigstore/cosign-installer@v3.2.0
        if: github.event_name != 'pull_request'

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY }}/${{ steps.build-image.outputs.image }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
